import{_ as s,o as a,c as n,a as l}from"./app.c0e7208f.js";const C=JSON.parse('{"title":"HTML5 精简版","description":"","frontmatter":{},"headers":[{"level":2,"title":"HTML 规范","slug":"html-规范","link":"#html-规范","children":[]},{"level":2,"title":"HTML 语义化","slug":"html-语义化","link":"#html-语义化","children":[]},{"level":2,"title":"meta 标签","slug":"meta-标签","link":"#meta-标签","children":[]},{"level":2,"title":"浏览器内核","slug":"浏览器内核","link":"#浏览器内核","children":[{"level":3,"title":"渲染引擎","slug":"渲染引擎","link":"#渲染引擎","children":[]},{"level":3,"title":"JS 引擎","slug":"js-引擎","link":"#js-引擎","children":[]}]},{"level":2,"title":"Audio 和 Video 播放器","slug":"audio-和-video-播放器","link":"#audio-和-video-播放器","children":[]},{"level":2,"title":"localStorage","slug":"localstorage","link":"#localstorage","children":[]},{"level":2,"title":"Input","slug":"input","link":"#input","children":[{"level":3,"title":"新增属性 placeholder","slug":"新增属性-placeholder","link":"#新增属性-placeholder","children":[]},{"level":3,"title":"新增 type","slug":"新增-type","link":"#新增-type","children":[]}]},{"level":2,"title":"自定义属性 data-","slug":"自定义属性-data","link":"#自定义属性-data","children":[]},{"level":2,"title":"Web Worker","slug":"web-worker","link":"#web-worker","children":[]}],"relativePath":"HTML5、CSS3/HTML5.md","lastUpdated":1702994340000}'),o={name:"HTML5、CSS3/HTML5.md"},p=l(`<h1 id="html5-精简版" tabindex="-1">HTML5 精简版 <a class="header-anchor" href="#html5-精简版" aria-hidden="true">#</a></h1><h2 id="html-规范" tabindex="-1">HTML 规范 <a class="header-anchor" href="#html-规范" aria-hidden="true">#</a></h2><p>首先 <strong>HTML</strong> 超文本标记语言：是一个标记语言，是有对应的语法标准<br>这也就是为什么，我们在 html 文件中的最上方要加上 <code>&lt;!DOCTYPE html&gt; </code>这样的字样</p><p>顺便给大家展示一下早期麻烦的写法</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;!</span><span style="color:#F07178;">DOCTYPE</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">html</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">PUBLIC</span><span style="color:#89DDFF;"> </span><span style="color:#C3E88D;">&quot;-//W3C//DTD HTML 4.01//EN&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C3E88D;">&quot;http://www.w3.org/TR/html4/strict.dtd&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>对于 html 文件，浏览器的解析器是需要对其进行解析的。因此我们使用 DOCTYPE 即 Document Type（网页文件的文档类型标准）来告诉解析器我们使用的是 <strong>HTML</strong> 规范或 <strong>XHTML</strong> 规范来解析页面</p><p>这里对几种标记语言进行拓展一下：</p><blockquote><p>1、HTML4 ：HTML 是先去实现，后面才制定规则。因此导致 HTML ⾮常混乱和松散，语法不严谨。<br> 2、XHTML ：XHTML 属于是加强版的 HTML，解决了 HTML 中混乱的问题，语法严谨。<br> 3、HTML5 ：HTML5 是在 HTML 的基础上拓展。也是目前的统一的标准。</p></blockquote><h2 id="html-语义化" tabindex="-1">HTML 语义化 <a class="header-anchor" href="#html-语义化" aria-hidden="true">#</a></h2><p>HTML5 规范提倡语义化标签，即使⽤恰当语义的 HTML 标签让⻚⾯具有良好的结构与含义。例如<code>&lt;p&gt;、&lt;article&gt;、&lt;header&gt;</code>等等具有很明显语义这样的标签。语义化有两点好处：</p><blockquote><p>1、利于 SEO：带有语义的网页代码，利于搜索引擎爬⾍程序来爬取和提取出有效的信息<br> 2、利于 开发者：可读性增强，开发团队可以清晰看出网页机构，利于团队协作开发和后续维护</p></blockquote><h2 id="meta-标签" tabindex="-1">meta 标签 <a class="header-anchor" href="#meta-标签" aria-hidden="true">#</a></h2><p>meta 标签是 html 标记 head 区域的一个非常关键且重要的标签。它所提供的是整个文档的基本元信息。 在这里列举几个常见的：</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">// 设置网页关键词（利用SEO）</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">meta</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">keywords</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">content</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">电商,好货,便宜</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">// 设置 http 响应头：Content-Type 网页内容类型</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">meta</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">charset</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">// 设置网页视口（viewport）控制视⼝的⼤⼩、缩放和⽐例</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">meta</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">viewport</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">content</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">width=device-width, initial-scale=1, maximum-scale=1</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="浏览器内核" tabindex="-1">浏览器内核 <a class="header-anchor" href="#浏览器内核" aria-hidden="true">#</a></h2><p>浏览器内核主要分为两部分：<strong>渲染引擎</strong>（Rendering Engine) 和 <strong>JS 引擎</strong> 。浏览器内核负责对网页语法的进行解释并且渲染网页。 但不同的浏览器，其内核也是有差别的。</p><table><thead><tr><th>Trident 内核</th><th>Gecko 内核</th><th>Blink 内核</th><th>Webkit 内核</th></tr></thead><tbody><tr><td>IE、搜狗、360</td><td>Netscape、FireFox</td><td>chrome、edge、opera</td><td>safari（chrome 以前）</td></tr></tbody></table><h3 id="渲染引擎" tabindex="-1">渲染引擎 <a class="header-anchor" href="#渲染引擎" aria-hidden="true">#</a></h3><p>渲染引擎会先通过浏览器网络层获得所请求文档的内容，然后开始解析 html 文件构建 DOM 树，（内部 css 文件、脚本下载解析就不说了），然后 CSSOM 树与 DOM 树关联和映射构建为 render 树，然后布局绘制</p><h3 id="js-引擎" tabindex="-1">JS 引擎 <a class="header-anchor" href="#js-引擎" aria-hidden="true">#</a></h3><p>先解释一个概念，所有的高级编程语言最后都是需要转成为机器指令去执行。因此不管宿主环境是 node 还是浏览器，最后都是要被 CPU 执行的<br> 综上概念就是说：JS 引擎是将 javascript 代码转成为 CPU 指令去执行</p><p>能力有限，粗略的说一下这个过程</p><blockquote><p>JavaScript 被 Parser 解析后，会变成 AST 抽象语法树，经过 Ignition 转化树，将 AST 转为字节码，再由 V8 引擎将字节码转化成 CPU 需要的机器指令，进行执行。</p></blockquote><h2 id="audio-和-video-播放器" tabindex="-1">Audio 和 Video 播放器 <a class="header-anchor" href="#audio-和-video-播放器" aria-hidden="true">#</a></h2><p><code>&lt;audio&gt;</code>和<code>&lt;video&gt;</code> 标签是 HTML5 的新标签即表示音频播放、视频播放。</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">// 关于audio的属性可访问链接：https://www.runoob.com/tags/tag-audio.html</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">audio</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/Images</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">controls</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">controls</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">audio</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">// 关于video的属性可访问链接：https://www.runoob.com/tags/tag-video.html</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">video</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/Images</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">controls</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">controls</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">video</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><blockquote><p>以上，都挺难看的且 video 有时候可能播放不出来（视频流格式问题）<br> 后续会整理出来</p></blockquote><h2 id="localstorage" tabindex="-1">localStorage <a class="header-anchor" href="#localstorage" aria-hidden="true">#</a></h2><p><strong>localStorage</strong> 本地存储也叫永久存储，非手动删除则一直存在。且与 cookie 都可以在所有同源窗口间共享。 优点：</p><ul><li>兼容性较好，ie8+都可</li><li>存储容量 5M</li><li>永久存储，除手动删除（只能存储字符串）</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 因只能存储字符串，所以需要使用JSON转化</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> info </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">username</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">zs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">age</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">18</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 存储</span></span>
<span class="line"><span style="color:#A6ACCD;">localStorage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setItem</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">user</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> info)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 读取</span></span>
<span class="line"><span style="color:#A6ACCD;">JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#A6ACCD;">(localStorage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getItem</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">user</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 手动移除</span></span>
<span class="line"><span style="color:#A6ACCD;">localStorage</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">remove</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="input" tabindex="-1">Input <a class="header-anchor" href="#input" aria-hidden="true">#</a></h2><h3 id="新增属性-placeholder" tabindex="-1">新增属性 placeholder <a class="header-anchor" href="#新增属性-placeholder" aria-hidden="true">#</a></h3><p>属性 placeholder 表示提示信息</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">placeholder</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">请输入用户名</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">password</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">placeholder</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">请输入密码</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="新增-type" tabindex="-1">新增 type <a class="header-anchor" href="#新增-type" aria-hidden="true">#</a></h3><p>新增 type 属性类型：color、date、datetime、datetime-local、month、week、time、email、number、range、search、tel 和 url。这里挑个别说一下，详细见： <a href="https://www.runoob.com/tags/att-input-type.html" target="_blank" rel="noreferrer">点击这里</a></p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- html5新增的这些type类型，但也存在一些兼容性的问题。 --&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">// 拾色器</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">color</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">// date控件（包括年、月、日，不包括时间）</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">date</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">// 定义输入数字</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">number</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">// 定义输入url字段</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">url</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">// 自动提示历史搜索</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">search</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="自定义属性-data" tabindex="-1">自定义属性 data- <a class="header-anchor" href="#自定义属性-data" aria-hidden="true">#</a></h2><p>HTML5 增加了一项新功能是 自定义数据属性 ，也就是<code>data-*</code> 自定义属性。在 HTML5 中我们可以使用以 <code>data-</code> 为前缀来设置我们需要的自定义属性，来进行一些数据的存放。当然高级浏览器下可通过脚本进行定义和数据存取。在项目实践中非常有用。</p><p>HTML5 新增了个<code>dataset</code>属性来存取<code>data-* </code>自定义属性的值。这个<code>dataset</code>属性是 HTML5 JavaScript API 的一部分，用来返回一个所有选择元素 data- 属性的<code>DOMStringMap</code>对象</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">button</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">value</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">按钮</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">index</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">10</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">data-index</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">10</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#C792EA;">data-index-color</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">red</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> btn </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelector</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">input</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 使用dataset方法获取自定义属性值并进行修改</span></span>
<span class="line"><span style="color:#A6ACCD;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(btn</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">dataset</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">index)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 10</span></span>
<span class="line"><span style="color:#A6ACCD;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(btn</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">dataset</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">indexColor)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// red</span></span>
<span class="line"><span style="color:#A6ACCD;">  btn</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">dataset</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">dataIndex </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(btn</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">dataset</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">index)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 20</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="web-worker" tabindex="-1">Web Worker <a class="header-anchor" href="#web-worker" aria-hidden="true">#</a></h2><p><strong>Web Worker</strong> 是 HTML5 标准的一部分，这一规范定义了一套 API，允许我们在 js 主线程之外开辟新的 Worker 线程，并将一段 js 脚本运行其中，它赋予了开发者利用 js 操作多线程的能力。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 这里是main.js。此为主线程内。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 初始化创建worker</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> worker </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Worker</span><span style="color:#A6ACCD;">(path)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// path代表worker的js脚本地址</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 主线程与 worker 线程都是通过 postMessage 方法来发送消息，以及监听 message 事件来接收消息</span></span>
<span class="line"><span style="color:#A6ACCD;">worker</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 接收消息</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// Greeting from Worker.js，worker线程返回的结果</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 主线程对worker线程发送消息</span></span>
<span class="line"><span style="color:#A6ACCD;">worker</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">postMessage</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">快点计算</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 关闭worker线程</span></span>
<span class="line"><span style="color:#A6ACCD;">worker</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">terminate</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><blockquote><p>worker 线程是独立的，不可以操作 dom，也没有 document 对象。worker 有一个全局对象 WorkerGlobalScope，window 上的很多属性方法存在 WorkerGlobalScope 中</p></blockquote>`,46),e=[p];function t(c,r,D,F,y,i){return a(),n("div",null,e)}const A=s(o,[["render",t]]);export{C as __pageData,A as default};
